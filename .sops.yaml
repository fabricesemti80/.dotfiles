##! NOTES >>
##! source: https://github.com/Mic92/sops-nix

#? PERSONAL keys
# 1. We first make sure that the neccesary directory exists:
#   - mkdir -p ~/.config/sops/age
# 2a. If we have an existing key(s), stored for example in 1Password, we put the PRIVATE key(s) to '~/.config/sops/age/keys.txt' 
# 2b. Alternatively we can generate a new key with age:
#   - age-keygen -o ~/.config/sops/age/keys.txt
# 2c. Alternatively we can generate a key from an ssh key:
#   - nix-shell -p ssh-to-age --run "ssh-to-age -private-key -i ~/.ssh/id_ed25519 > ~/.config/sops/age/keys.txt"
# 3. We than update the encryption on an EXISTING system, by:
#    - Updating the encryption rules in '.sops.yaml' using the '- &user_bar age.......' and '- *user_bar'  lines, where 'age.......' is the new public key matching to the private key
# 4a. Next we update - re-encrypt the secrets:
#   - sops updatekeys hosts/common/secrets/super_secrets.yaml
# 4b. Or we can create new secrets
#   - sops secrets/example.yaml
# 5. We than commit the changes and 'git pull' these to the new system

#? MACHINE keys
# 1. For all new machine we need a new key, so we run this on the NEW system:
#   - nix-shell -p ssh-to-age --run 'cat /etc/ssh/ssh_host_ed25519_key.pub | ssh-to-age'
# 2. We than update the encryption on an EXISTING system, by:
#    - Updating the encryption rules in '.sops.yaml' using the '- &host_foo age.......' and '- *host_foo'  lines, where 'age.......' is the new public key from the new system
# 3a. Next we update - re-encrypt the secrets:
#   - sops updatekeys hosts/common/secrets/super_secrets.yaml
# 3b. Or we can create new secrets
#   - sops secrets/example.yaml
# 4. We than commit the changes and 'git pull' these to the new system

##! << NOTES


keys:

  - &user_fabrice_primary age1pe3qfuzzgkmfn0yg9ezehw2kkftaj30evvck705hs9gmdv3vhqdsu44hl2
  - &host_vm age1rv5gn43rjdwla6t9wgz32tz4cvrfuh2ghwj3gwy5p3q3um02v93szjyss9
  - &host_legacy_vm age1s4uqdm7hmaev4h2m0sf7qk5wxddke6rhem0gqeegpgpdav04fyqq5r9fkn
  - &host_test_machine age1gvccm4tcncykmegm0x2qthdku748p8s4dcwh99c80llnd4ly0eaqevpdk2

# This section determines the keys that secrets under certain folder paths are encrypted for.
# (AKA which keys (key_groups) can decrypt which secrets (path_regex))  
creation_rules:
  - path_regex: secrets/[^/]+\.(yaml|json|env|ini)$
    key_groups:
    # note: you MUST specify both `pgp` and `age` fields, even if one is empty.
    - pgp: []
      age:
      - *user_fabrice_primary
      - *host_vm
      - *host_legacy_vm
      - *host_test_machine
